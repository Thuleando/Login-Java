<?xml version = '1.0' encoding = 'UTF-8'?>
<TriggerOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.TriggerOraclev10g" name="V_LoginAttempts_Insert_TRG" directorySegmentName="seg_0" id="95AB8B30-8B75-D928-86D3-504883A039B2">
<createdBy>Shelley</createdBy>
<createdTime>2014-11-14 01:24:07 UTC</createdTime>
<comment>Failed login attempts are recorded, and a warning is displayed about the number of attempts left. On the 3rd failed login attempt since the last unlock date, if all 3 are on the same day, the account is locked and a corresponding message displayed.&lt;br/&gt;&lt;br/&gt;Here &quot;same day&quot; means the same calendar day, not the same 24-hour-period).</comment>
<ownerDesignName>Login_Authenticator</ownerDesignName>
<actions>INSERT</actions>
<body>DECLARE&lt;br/&gt;&lt;br/&gt;FailedCountVar		NUMERIC(2) NOT NULL := 0;&lt;br/&gt;LockDateVar		Accounts.LockDate%TYPE;&lt;br/&gt;&lt;br/&gt;BEGIN&lt;br/&gt;&lt;br/&gt;IF :NewRow.WasSuccessful = &apos;N&apos; THEN&lt;br/&gt;  SELECT Accounts.LockDate INTO LockDateVar FROM Accounts&lt;br/&gt;  WHERE Accounts.ID = :NewRow.Accounts_ID;&lt;br/&gt;  &lt;br/&gt;	IF LockDateVar IS NOT NULL THEN&lt;br/&gt;		DBMS_OUTPUT.PUT_LINE(&apos;The account is locked.&apos; || CHR(13) || CHR(10) || &apos;Please contact administrator for more information.&apos;);&lt;br/&gt;	ELSE&lt;br/&gt;		SELECT COUNT(LoginAttempts.Accounts_ID) INTO FailedCountVar FROM LoginAttempts&lt;br/&gt;		WHERE LoginAttempts.Accounts_ID = :NewRow.Accounts_ID&lt;br/&gt;		AND LoginAttempts.WasSuccessful = &apos;N&apos;&lt;br/&gt;		AND TRUNC(LoginAttempts.WhenAttempted) = TRUNC(:NewRow.WhenAttempted)&lt;br/&gt;		AND LoginAttempts.WhenAttempted &gt; (SELECT Accounts.UnlockDate FROM Accounts WHERE Accounts.ID = :NewRow.Accounts_ID);&lt;br/&gt;	&lt;br/&gt;		FailedCountVar := FailedCountVar + 1;&lt;br/&gt;	&lt;br/&gt;		IF FailedCountVar &lt; 3 THEN&lt;br/&gt;			DBMS_OUTPUT.PUT_LINE(&apos;Invalid password.&apos; || CHR(13) || CHR(10) || (3 - FailedCountVar) || &apos; attempt(s) left before the account will be locked!&apos;);&lt;br/&gt;		ELSE&lt;br/&gt;			UPDATE Accounts&lt;br/&gt;				SET Accounts.LockDate = :NewRow.WhenAttempted&lt;br/&gt;				WHERE Accounts.ID = :NewRow.Accounts_ID;&lt;br/&gt;			DBMS_OUTPUT.PUT_LINE(&apos;Invalid password. The account is now locked!&apos; || CHR(13) || CHR(10) || &apos;Please contact administrator for more information.&apos;);&lt;br/&gt;		END IF;&lt;br/&gt;	END IF;&lt;br/&gt;ELSE&lt;br/&gt;    DBMS_OUTPUT.PUT_LINE(&apos;Login successful.&apos;);&lt;br/&gt;    INSERT INTO V_Sessions VALUES (:NewRow.Accounts_ID, :NewRow.WhenAttempted, NULL);&lt;br/&gt;END IF;&lt;br/&gt;&lt;br/&gt;INSERT INTO LoginAttempts VALUES (:NewRow.Accounts_ID, :NewRow.WhenAttempted, :NewRow.WasSuccessful);&lt;br/&gt;&lt;br/&gt;END V_LoginAttempts_Insert_TRG;</body>
<triggerTime>INSTEAD OF</triggerTime>
<ref_NEW_AS>NewRow</ref_NEW_AS>
<state>ENABLE</state>
<view>608EC0EA-5EB8-A1C0-CB5F-A3939361D13D</view>
</TriggerOraclev10g>